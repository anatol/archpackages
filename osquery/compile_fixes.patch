diff --git a/CMake/FindGlog.cmake b/CMake/FindGlog.cmake
index 182ce31..446ae08 100644
--- a/CMake/FindGlog.cmake
+++ b/CMake/FindGlog.cmake
@@ -1,41 +1,3 @@
 include(FindPackageHandleStandardArgs)
 
-set(GLOG_ROOT_DIR "${CMAKE_BINARY_DIR}/third-party/glog")
-set(GLOG_SOURCE_DIR "${CMAKE_SOURCE_DIR}/third-party/glog")
-
-if(NOT APPLE)
-  include(CheckIncludeFiles)
-  unset(LIBUNWIND_FOUND CACHE)
-  check_include_files("libunwind.h;unwind.h" LIBUNWIND_FOUND)
-  if(LIBUNWIND_FOUND)
-    unset(libglog_FOUND CACHE)
-    execute_process(
-      COMMAND rm -rf "${GLOG_ROOT_DIR}" "${CMAKE_BINARY_DIR}/libglog-prefix"
-      ERROR_QUIET
-    )
-    message(WARNING "${Esc}[31mWarning: libunwind headers found [Issue #596], please: make deps\n${Esc}[m")
-  endif()
-endif()
-
-set(GLOG_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unnamed-type-template-args")
-
-INCLUDE(ExternalProject)
-ExternalProject_Add(
-  libglog
-  SOURCE_DIR ${GLOG_SOURCE_DIR}
-  INSTALL_DIR ${GLOG_ROOT_DIR}
-  CONFIGURE_COMMAND ${GLOG_SOURCE_DIR}/configure
-    CC=/usr/bin/clang CXX=/usr/bin/clang++
-    CXXFLAGS=${GLOG_CXX_FLAGS}
-    --enable-frame-pointers --enable-shared=no --prefix=${GLOG_ROOT_DIR}
-  BUILD_COMMAND make
-  INSTALL_COMMAND make install
-  LOG_CONFIGURE ON
-  LOG_INSTALL ON
-)
-
-set(GLOG_INCLUDE_DIR "${GLOG_ROOT_DIR}/include")
-set(GLOG_INCLUDE_DIRS ${GLOG_INCLUDE_DIR})
-
-set(GLOG_LIBRARY "${GLOG_ROOT_DIR}/lib/libglog.a")
-set(GLOG_LIBRARIES ${GLOG_LIBRARY})
+set(GLOG_LIBRARY glog)
diff --git a/CMake/FindSqlite3.cmake b/CMake/FindSqlite3.cmake
index 642426c..a7d4b1a 100644
--- a/CMake/FindSqlite3.cmake
+++ b/CMake/FindSqlite3.cmake
@@ -1,2 +1,31 @@
-INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/third-party/sqlite3")
-ADD_SUBDIRECTORY("${CMAKE_SOURCE_DIR}/third-party/sqlite3")
+# This code is released under the
+# Apache License Version 2.0 http://www.apache.org/licenses/.
+#
+# Copyright (c) 2012 Louis Dionne
+#
+# Find sqlite3 compression library and includes. This module defines:
+#   sqlite3_INCLUDE_DIRS - The directories containing sqlite3's headers.
+#   sqlite3_LIBRARIES    - A list of sqlite3's libraries.
+#   sqlite3_FOUND        - Whether sqlite3 was found.
+#
+# This module can be controlled by setting the following variables:
+#   sqlite3_ROOT - The root directory where to find sqlite3. If this is not
+#                 set, the default paths are searched.
+
+if(NOT sqlite3_ROOT)
+    find_path(sqlite3_INCLUDE_DIRS sqlite3.h)
+    find_library(sqlite3_LIBRARIES NAMES sqlite3)
+else()
+    find_path(sqlite3_INCLUDE_DIRS sqlite3.h NO_DEFAULT_PATH PATHS ${sqlite3_ROOT})
+    find_library(sqlite3_LIBRARIES NAMES sqlite3 NO_DEFAULT_PATH PATHS ${sqlite3_ROOT})
+endif()
+
+if(sqlite3_INCLUDE_DIRS AND sqlite3_LIBRARIES)
+    set(sqlite3_FOUND TRUE)
+else()
+    set(sqlite3_FOUND FALSE)
+    set(sqlite3_INCLUDE_DIR)
+    set(sqlite3_LIBRARIES)
+endif()
+
+mark_as_advanced(sqlite3_LIBRARIES sqlite3_INCLUDE_DIRS)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index b1ed30c..17f728c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -46,15 +46,6 @@ string(TOUPPER "${PLATFORM}" PLATFORM)
 list(GET PLATFORM 0 OSQUERY_BUILD_OS)
 list(GET PLATFORM 1 OSQUERY_BUILD_DISTRO)
 
-# Make sure deps were built before compiling
-execute_process(
-  COMMAND "${CMAKE_SOURCE_DIR}/tools/provision.sh" check "${CMAKE_BINARY_DIR}"
-  WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
-  OUTPUT_VARIABLE OSQUERY_DEPS_MESSAGE
-  RESULT_VARIABLE OSQUERY_DEPS_CHECK
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
 string(ASCII 27 Esc)
 if(OSQUERY_DEPS_CHECK)
   message(WARNING "${Esc}[31m${OSQUERY_DEPS_MESSAGE}${Esc}[m")
@@ -97,11 +88,10 @@ find_package(Snappy REQUIRED)
 find_package(Sqlite3 REQUIRED)
 find_package(Thrift 0.9.1 REQUIRED)
 
-include_directories("${GLOG_INCLUDE_DIRS}")
 include_directories("${CMAKE_SOURCE_DIR}/include")
 include_directories("${CMAKE_SOURCE_DIR}")
-include_directories("/usr/local/include")
-link_directories("/usr/local/lib")
+include_directories("/usr/include")
+link_directories("/usr/lib")
 
 enable_testing()
 
diff --git a/include/osquery/flags.h b/include/osquery/flags.h
index 7ec812a..73e3944 100644
--- a/include/osquery/flags.h
+++ b/include/osquery/flags.h
@@ -16,7 +16,7 @@
 #include <osquery/registry.h>
 #include <osquery/status.h>
 
-#define __GFLAGS_NAMESPACE google
+#define __GFLAGS_NAMESPACE gflags
 
 namespace osquery {
 
diff --git a/osquery/CMakeLists.txt b/osquery/CMakeLists.txt
index 45e8f0e..f92c9d9 100644
--- a/osquery/CMakeLists.txt
+++ b/osquery/CMakeLists.txt
@@ -12,7 +12,7 @@ set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "")
 # The core set of osquery libraries most discovered with find_package.
 set(OSQUERY_LIBS
   ${THRIFT_LIB}
-  ${ROCKSDB_STATIC_LIBRARIES}
+  ${ROCKSDB_LIBRARY}
   ${ROCKSDB_SNAPPY_LIBRARY}
   ${GLOG_LIBRARY}
   ${GFLAGS_LIBRARY}
diff --git a/tools/tests/flag_test.cpp b/tools/tests/flag_test.cpp
index 0393f7f..daa34f9 100644
--- a/tools/tests/flag_test.cpp
+++ b/tools/tests/flag_test.cpp
@@ -47,7 +47,7 @@ int checkFlags() {
 
 int main(int argc, char* argv[]) {
   google::ParseCommandLineFlags(&argc, &argv, true);
-  google::InitGoogleLogging(argv[0]);
+  gflags::InitGoogleLogging(argv[0]);
 
   return osquery::checkFlags();
 }
