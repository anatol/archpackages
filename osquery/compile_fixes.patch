commit 4fdff89e5973f99fe11c5dc9f49553e9a25152b2
Author: Anatol Pomozov <anatol.pomozov@gmail.com>
Date:   Tue Nov 4 20:48:49 2014 -0800

    Make it compiling on Linux Arch

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7ac1ff3..17d2d31 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -26,15 +26,6 @@ string(TOUPPER "${PLATFORM}" PLATFORM)
 list(GET PLATFORM 0 OSQUERY_BUILD_OS)
 list(GET PLATFORM 1 OSQUERY_BUILD_DISTRO)
 
-# Make sure deps were built before compiling
-execute_process(
-  COMMAND ${CMAKE_SOURCE_DIR}/tools/provision.sh check ${CMAKE_BINARY_DIR}
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
-  OUTPUT_VARIABLE OSQUERY_DEPS_MESSAGE
-  RESULT_VARIABLE OSQUERY_DEPS_CHECK
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
 if(OSQUERY_DEPS_CHECK)
   string(ASCII 27 Esc)
   message(WARNING "${Esc}[31m${OSQUERY_DEPS_MESSAGE}${Esc}[m")
diff --git a/osquery/CMakeLists.txt b/osquery/CMakeLists.txt
index 21d197d..9627eb0 100644
--- a/osquery/CMakeLists.txt
+++ b/osquery/CMakeLists.txt
@@ -19,26 +19,24 @@ SET(OSQUERY_APPLE_LIBS
 )
 
 SET(OSQUERY_LINUX_LIBS
-  libgflags.a
-  libglog.a
-  librocksdb.a
-  libthrift.a
-  libboost_thread.a
-  libboost_system.a
-  libboost_filesystem.a
-  libboost_program_options.a
-  libboost_regex.a
+  gflags
+  glog
+  rocksdb
+  thrift
+  boost_thread
+  boost_system
+  boost_filesystem
+  boost_program_options
+  boost_regex
   udev
   blkid
   rt
-)
-
-SET(OSQUERY_UBUNTU_LIBS
-  libz.a
-  libbz2.a
-  libsnappy.a
-  libunwind.a
-  liblzma.a
+  procps
+  z
+  bz2
+  snappy
+  unwind
+  lzma
 )
 
 SET(OSQUERY_CENTOS_LIBS
@@ -61,16 +59,6 @@ if(APPLE)
   set(OSQUERY_LIBS ${OSQUERY_LIBS} ${OSQUERY_APPLE_LIBS})
 else()
   set(OSQUERY_LIBS ${OSQUERY_LIBS} ${OSQUERY_LINUX_LIBS})
-  if(UBUNTU)
-    if(PROCPS)
-      list(APPEND OSQUERY_UBUNTU_LIBS "libprocps.a")
-    else()
-      list(APPEND OSQUERY_UBUNTU_LIBS "libproc.a")
-    endif()
-    set(OSQUERY_LIBS ${OSQUERY_LIBS} ${OSQUERY_UBUNTU_LIBS})
-  elseif(CENTOS)
-    set(OSQUERY_LIBS ${OSQUERY_LIBS} ${OSQUERY_CENTOS_LIBS})
-  endif()
 endif()
 
 # Fill this in with objects for libosquery
@@ -146,15 +134,6 @@ MACRO(TARGET_OSQUERY_LINK_WHOLE TARGET OSQUERY_LIB)
   TARGET_LINK_LIBRARIES(${TARGET} "${OS_WHOLELINK_POST}")
 ENDMACRO(TARGET_OSQUERY_LINK_WHOLE)
 
-# Make sure deps were built before compiling
-execute_process(
-  COMMAND ${CMAKE_SOURCE_DIR}/tools/provision.sh check ${CMAKE_BINARY_DIR}
-  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
-  OUTPUT_VARIABLE OSQUERY_DEPS_MESSAGE
-  RESULT_VARIABLE OSQUERY_DEPS_CHECK
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
 # Table generation
 
 file(GLOB TABLE_FILES "tables/specs/x/*.table")
@@ -270,12 +249,8 @@ if(NOT APPLE)
   if(UBUNTU)
     SET(CPACK_GENERATOR "DEB")
 
-    EXECUTE_PROCESS(COMMAND grep DISTRIB_CODENAME /etc/lsb-release OUTPUT_VARIABLE DISTRO)
-    STRING(REPLACE "DISTRIB_CODENAME=" "" DISTRO ${DISTRO})
-    STRING(REPLACE "\n" "" DISTRO ${DISTRO})
-
-    EXECUTE_PROCESS(COMMAND dpkg --print-architecture OUTPUT_VARIABLE DPKG_ARCH)
-    STRING(REPLACE "\n" "" DPKG_ARCH ${DPKG_ARCH})
+    SET(DISTRO "Arch")
+    SET(DPKG_ARCH "x86_64")
 
     SET(CPACK_SYSTEM_NAME "${DISTRO}.${DPKG_ARCH}")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE ${DPKG_ARCH})
diff --git a/osquery/core/init_osquery.cpp b/osquery/core/init_osquery.cpp
index dff8de4..8d3d227 100644
--- a/osquery/core/init_osquery.cpp
+++ b/osquery/core/init_osquery.cpp
@@ -9,7 +9,7 @@
 
 namespace osquery {
 
-#define __GFLAGS_NAMESPACE google
+#define __GFLAGS_NAMESPACE gflags
 
 const std::string kDescription =
     "your operating system as a high-performance "
diff --git a/tools/flag_test.cpp b/tools/flag_test.cpp
index 5d9dd3f..f24fa42 100644
--- a/tools/flag_test.cpp
+++ b/tools/flag_test.cpp
@@ -12,7 +12,7 @@ DEFINE_string(log_receiver, "", "log_receiver");
 DEFINE_string(log_path, "", "log_path");
 
 int main(int argc, char* argv[]) {
-  google::ParseCommandLineFlags(&argc, &argv, true);
+  gflags::ParseCommandLineFlags(&argc, &argv, true);
   google::InitGoogleLogging(argv[0]);
   FLAGS_logtostderr = 1;
 
