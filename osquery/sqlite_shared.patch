diff --git a/CMake/FindSqlite3.cmake b/CMake/FindSqlite3.cmake
index 642426c..a7d4b1a 100644
--- a/CMake/FindSqlite3.cmake
+++ b/CMake/FindSqlite3.cmake
@@ -1,2 +1,31 @@
-INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/third-party/sqlite3")
-ADD_SUBDIRECTORY("${CMAKE_SOURCE_DIR}/third-party/sqlite3")
+# This code is released under the
+# Apache License Version 2.0 http://www.apache.org/licenses/.
+#
+# Copyright (c) 2012 Louis Dionne
+#
+# Find sqlite3 compression library and includes. This module defines:
+#   sqlite3_INCLUDE_DIRS - The directories containing sqlite3's headers.
+#   sqlite3_LIBRARIES    - A list of sqlite3's libraries.
+#   sqlite3_FOUND        - Whether sqlite3 was found.
+#
+# This module can be controlled by setting the following variables:
+#   sqlite3_ROOT - The root directory where to find sqlite3. If this is not
+#                 set, the default paths are searched.
+
+if(NOT sqlite3_ROOT)
+    find_path(sqlite3_INCLUDE_DIRS sqlite3.h)
+    find_library(sqlite3_LIBRARIES NAMES sqlite3)
+else()
+    find_path(sqlite3_INCLUDE_DIRS sqlite3.h NO_DEFAULT_PATH PATHS ${sqlite3_ROOT})
+    find_library(sqlite3_LIBRARIES NAMES sqlite3 NO_DEFAULT_PATH PATHS ${sqlite3_ROOT})
+endif()
+
+if(sqlite3_INCLUDE_DIRS AND sqlite3_LIBRARIES)
+    set(sqlite3_FOUND TRUE)
+else()
+    set(sqlite3_FOUND FALSE)
+    set(sqlite3_INCLUDE_DIR)
+    set(sqlite3_LIBRARIES)
+endif()
+
+mark_as_advanced(sqlite3_LIBRARIES sqlite3_INCLUDE_DIRS)
diff --git a/osquery/CMakeLists.txt b/osquery/CMakeLists.txt
index 81958ae..5a4cc40 100644
--- a/osquery/CMakeLists.txt
+++ b/osquery/CMakeLists.txt
@@ -37,6 +37,7 @@ SET(OSQUERY_LINUX_LIBS
   snappy
   unwind
   lzma
+  sqlite3
 )
 
 SET(OSQUERY_CENTOS_LIBS
@@ -193,9 +194,6 @@ ADD_SUBDIRECTORY(scheduler)
 ADD_SUBDIRECTORY(tables)
 
 SET(OSQUERY_LIB_OBJECTS
-  # Third-party objects
-  $<TARGET_OBJECTS:osquery_sqlite>
-
   # Generated code
   $<TARGET_OBJECTS:osquery_generated_tables>
